name: CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read
  packages: write

jobs:

  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up QEMU (for cross-building, если нужно)
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Make gradlew executable
        run: |
          chmod +x gradlew

      - name: Build the application locally
        run: |
          ./gradlew build

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/gateway-openai-api:latest .

      - name: Log in to GitHub Container Registry
        if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}
        run: |
          echo "${{ github.token }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Push image to GHCR
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/gateway-openai-api:latest

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    steps:
      - name: SSH into server & deploy
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            echo "Checking if Docker is installed on remote server..."

            # 1. Проверяем, есть ли команда docker.
            # Если нет — устанавливаем (пример для Ubuntu/Debian).
            if ! command -v docker &> /dev/null
            then
              echo "Docker not found. Installing Docker..."
              # Если у вас есть sudo — пользуемся им:
              sudo apt-get update -y
              sudo apt-get install -y docker.io
              # Можно добавить:
              # sudo systemctl enable docker
              # sudo systemctl start docker
              echo "Docker has been installed."
            else
              echo "Docker is already installed."
            fi

            # 2. Пробуем тянуть образ.
            echo "Pulling latest image from GHCR..."
            docker pull ghcr.io/${{ github.repository_owner }}/gateway-openai-api:latest

            # 3. Останавливаем и удаляем предыдущий контейнер (если есть).
            echo "Stop and remove old container if it exists..."
            docker stop gateway-openai-api || true
            docker rm gateway-openai-api || true

            # 4. Запускаем новый контейнер.
            echo "Starting new container..."
            docker run -d \
              --name gateway-openai-api \
              -p 8080:8080 \
              ghcr.io/${{ github.repository_owner }}/gateway-openai-api:latest
